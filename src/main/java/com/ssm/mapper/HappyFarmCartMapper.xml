<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.HappyFarmCartMapper">
  <resultMap id="BaseResultMap" type="com.ssm.entity.HappyFarmCart">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="productId" jdbcType="INTEGER" property="productid" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="price" jdbcType="DOUBLE" property="price" />
  </resultMap>
  
    <resultMap id="selectCartList" type="com.ssm.entity.HappyFarmCart">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="productId" jdbcType="INTEGER" property="productid" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <association property="happyFarmLandinfo" javaType="com.ssm.entity.HappyFarmLandinfo">
     <id column="landID" jdbcType="INTEGER" property="landid" />
    <result column="landName" jdbcType="VARCHAR" property="landname" />
    <result column="landPrice" jdbcType="DOUBLE" property="landprice" />
    <result column="landImg" jdbcType="VARCHAR" property="landimg" />
    <result column="landMs" jdbcType="VARCHAR" property="landms" />
    <result column="landArea" jdbcType="VARCHAR" property="landarea" />
    <result column="landDate" jdbcType="DATE" property="landdate" />
    <result column="landSize" jdbcType="VARCHAR" property="landsize" />
    <result column="status" jdbcType="INTEGER" property="status" />
    </association>
  </resultMap>
  
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, productId, number, price
  </sql>
  <select id="selectByExample" parameterType="com.ssm.entity.HappyFarmCartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from happy_farm_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from happy_farm_cart
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from happy_farm_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.entity.HappyFarmCartExample">
    delete from happy_farm_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.entity.HappyFarmCart">
    insert into happy_farm_cart (id, userId, productId, 
      number, price)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.entity.HappyFarmCart">
    insert into happy_farm_cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="productid != null">
        productId,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.entity.HappyFarmCartExample" resultType="java.lang.Long">
    select count(*) from happy_farm_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update happy_farm_cart
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null">
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update happy_farm_cart
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      productId = #{record.productid,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.entity.HappyFarmCart">
    update happy_farm_cart
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        productId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.entity.HappyFarmCart">
    update happy_farm_cart
    set userId = #{userid,jdbcType=INTEGER},
      productId = #{productid,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCart" resultMap="selectCartList">
		SELECT 
			*
		from happy_farm_cart
		join happy_farm_landinfo 
		on happy_farm_cart.productId=happy_farm_landinfo.landID
		where happy_farm_cart.userId=#{userid}
  </select>
</mapper>